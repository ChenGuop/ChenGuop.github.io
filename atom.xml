<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChanRoc</title>
  <subtitle>Roc</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.chanroc.top/"/>
  <updated>2016-11-05T09:04:07.887Z</updated>
  <id>http://blog.chanroc.top/</id>
  
  <author>
    <name>Roc Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Boot实战 --（二）Spring 常用配置</title>
    <link href="http://blog.chanroc.top/2016/11/04/springboot/ch2/"/>
    <id>http://blog.chanroc.top/2016/11/04/springboot/ch2/</id>
    <published>2016-11-04T03:26:00.000Z</published>
    <updated>2016-11-05T09:04:07.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-常用配置"><a href="#Spring-常用配置" class="headerlink" title="Spring 常用配置"></a>Spring 常用配置</h1><h2 id="1-Bean-的Scope"><a href="#1-Bean-的Scope" class="headerlink" title="1.Bean 的Scope"></a>1.Bean 的Scope</h2><h3 id="1-1点睛"><a href="#1-1点睛" class="headerlink" title="1.1点睛"></a>1.1点睛</h3><blockquote>
<p>Scope描述的是Spring容器如何新建Bean的实例的。<br>Spring的scope有一下几种：</p>
<ol>
<li>singleton：一个Spring容器一个Bean实例（默认配置），容器共享一个实例</li>
<li>Prototype：每次调用新建一个Bean实例。</li>
<li>Request： Web项目中，给每一个http request 新建一个Bean实例。</li>
<li>Session： Web项目中，给每一个http session新建一个Bean实例。</li>
<li>GlobalSession：这个只在portal应用中使用，global http session 新建一个Bean实例。</li>
<li>@StepScope：Spring Batch中Scope使用批处理。</li>
</ol>
</blockquote>
<h3 id="1-2示例"><a href="#1-2示例" class="headerlink" title="1.2示例"></a>1.2示例</h3><ul>
<li><p>Singleton 的Bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.scope;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Scope;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Prototype的bean</div><div class="line"> * DemoPrototypeService</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="meta">@Scope</span>(<span class="string">"prototype"</span>)<span class="comment">//声明为scope为ProtoType</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoPrototypeService</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Prototype的Bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.scope;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Singleton的Bean</div><div class="line"> * DemoSingletService</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="comment">//默认为Singleton，相当于@Scope("singleton")</span></div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoSingletService</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.scope;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 配置类</div><div class="line"> * ScopeConfig</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.chanroc.springboot.ch2.scope"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScopeConfig</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.scope;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 运行主方法</div><div class="line"> * Main</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(ScopeConfig.class);</div><div class="line">		DemoSingletService s1 = context.getBean(DemoSingletService.class);</div><div class="line">		DemoSingletService s2 = context.getBean(DemoSingletService.class);</div><div class="line">		DemoPrototypeService p1 = context.getBean(DemoPrototypeService.class);</div><div class="line">		DemoPrototypeService p2 = context.getBean(DemoPrototypeService.class);</div><div class="line">		System.out.println(<span class="string">"s1与s2是否相等："</span>+s1.equals(s2));</div><div class="line">		System.out.println(<span class="string">"p1与p2是否相等："</span>+p1.equals(p2));</div><div class="line"></div><div class="line">		context.close();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>打印：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s1与s2是否相等：true</div><div class="line"></div><div class="line">p1与p2是否相等：false</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch2/scope" target="_blank" rel="external">代码实例（连接）</a></p>
</li>
</ul>
<p>##2. Spring EL 和资源调用</p>
<h3 id="2-1点睛"><a href="#2-1点睛" class="headerlink" title="2.1点睛"></a>2.1点睛</h3><blockquote>
<ul>
<li>Spring EL ：Spring 表达式语言，支持在xml和注解中使用表达式。类似于JSP的EL表达式</li>
<li>调用资源：普通文件，网址，配置文件，系统环境变量等</li>
<li>@Value： 的参数中使用表达式</li>
</ul>
</blockquote>
<ul>
<li>演示实现的几种情况：<ul>
<li>注入普通字符；</li>
<li>注入操作系统属性；</li>
<li>注入表达式运算结果；</li>
<li>注入其他的Bean的属性</li>
<li>注入文件内容</li>
<li>注入网址内容</li>
<li>注入属性文件</li>
</ul>
</li>
</ul>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul>
<li><p>pom.xml文件添加commons-io文件操作</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>添加文件：</p>
<blockquote>
<p> resources包下新建test.propertires</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">book.author=changuop</div><div class="line">book.name=spring boot</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>resources包下新建test.txt文件内容随意</p>
</blockquote>
<ul>
<li><p>需要被注入的Bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.el;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 注入Bean</div><div class="line"> * DemoService</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoService</span> </span>&#123;</div><div class="line">	<span class="meta">@Value</span>(<span class="string">"其他类的属性"</span>)<span class="comment">//注入普通的字符串</span></div><div class="line">	<span class="keyword">private</span> String another;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAnother</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> another;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAnother</span><span class="params">(String another)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.another = another;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.el;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</div><div class="line"><span class="keyword">import</span> org.springframework.context.support.PropertySourcesPlaceholderConfigurer;</div><div class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</div><div class="line"><span class="keyword">import</span> org.springframework.core.io.Resource;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 配置类</div><div class="line"> * ElConfig</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.chanroc.springboot.ch2.el"</span>)<span class="comment">//注入Bean</span></div><div class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:test.properties"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElConfig</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"I Love You!"</span>)<span class="comment">//普通字符串</span></div><div class="line">	<span class="keyword">private</span> String normal;</div><div class="line"></div><div class="line">	<span class="comment">//操作系统属性</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"#&#123;systemProperties['os.name']&#125;"</span>)</div><div class="line">	<span class="keyword">private</span> String osName;</div><div class="line"></div><div class="line">	<span class="comment">//注入其他Bean属性</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"#&#123; demoService.another&#125;"</span>)</div><div class="line">	<span class="keyword">private</span> String fromAnthor;</div><div class="line">	<span class="comment">//注入表达式结果</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"#&#123; T(java.lang.Math).random()*100.0 &#125;"</span>)</div><div class="line">	<span class="keyword">private</span> <span class="keyword">double</span> randomNumber;</div><div class="line">	<span class="comment">//文件资源</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"classpath:test.txt"</span>)</div><div class="line">	<span class="keyword">private</span> Resource testFile;</div><div class="line">	<span class="comment">//网址资源</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"http://www.baidu.com"</span>)</div><div class="line">	<span class="keyword">private</span> Resource testUrl;</div><div class="line">	<span class="comment">//配置文件</span></div><div class="line">	<span class="meta">@Value</span>(<span class="string">"$&#123;book.name&#125;"</span>)</div><div class="line">	<span class="keyword">private</span> String bookName;</div><div class="line">	<span class="meta">@Autowired</span></div><div class="line">	<span class="keyword">private</span> Environment environment;</div><div class="line"></div><div class="line">	<span class="meta">@Bean</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer <span class="title">placeholderConfigurer</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> PropertySourcesPlaceholderConfigurer();</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outputResource</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			System.out.println(<span class="string">"----------Sanji.com--------normal值="</span> + normal + <span class="string">",当前类=ElConfig.outputResource()"</span>);</div><div class="line">			System.out.println(<span class="string">"----------Sanji.com--------osName值="</span> + osName + <span class="string">",当前类=ElConfig.outputResource()"</span>);</div><div class="line">			System.out.println(<span class="string">"----------Sanji.com--------randomNumber值="</span> + randomNumber + <span class="string">",当前类=ElConfig.outputResource()"</span>);</div><div class="line">			System.out.println(<span class="string">"----------Sanji.com--------fromAnthor值="</span> + fromAnthor + <span class="string">",当前类=ElConfig.outputResource()"</span>);</div><div class="line">			System.out.println(IOUtils.toString(testFile.getInputStream()));</div><div class="line">			System.out.println(IOUtils.toString(testUrl.getInputStream()));</div><div class="line">			System.out.println(<span class="string">"----------Sanji.com--------bookName值="</span> + bookName + <span class="string">",当前类=ElConfig.outputResource()"</span>);</div><div class="line">			System.out.println(environment.getProperty(<span class="string">"book.author"</span>));</div><div class="line">		&#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.el;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 主方法运行</div><div class="line"> * Main</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/4</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AnnotationConfigApplicationContext context =<span class="keyword">new</span> AnnotationConfigApplicationContext(ElConfig.class);</div><div class="line">		ElConfig elConfig = context.getBean(ElConfig.class);</div><div class="line">		elConfig.outputResource();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">----------Sanji.com--------normal值=I Love You!,当前类=ElConfig.outputResource()</div><div class="line">----------Sanji.com--------osName值=Windows 7,当前类=ElConfig.outputResource()</div><div class="line">----------Sanji.com--------randomNumber值=94.23795546931908,当前类=ElConfig.outputResource()</div><div class="line">----------Sanji.com--------fromAnthor值=其他类的属性,当前类=ElConfig.outputResource()</div><div class="line">这是一个测试文件txt</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=content-type content=text/html;charset=utf-8&gt;&lt;meta http-equiv=X-UA-Compatible content=IE=Edge&gt;&lt;meta content=always name=referrer&gt;&lt;link rel=stylesheet type=text/css href=http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css&gt;&lt;title&gt;百度一下，你就知道&lt;/title&gt;&lt;/head&gt; &lt;body link=#0000cc&gt; &lt;div id=wrapper&gt; &lt;div id=head&gt; &lt;div class=head_wrapper&gt; &lt;div class=s_form&gt; &lt;div class=s_form_wrapper&gt; &lt;div id=lg&gt; &lt;img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129&gt; &lt;/div&gt; &lt;form id=form name=f action=//www.baidu.com/s class=fm&gt; &lt;input type=hidden name=bdorz_come value=1&gt; &lt;input type=hidden name=ie value=utf-8&gt; &lt;input type=hidden name=f value=8&gt; &lt;input type=hidden name=rsv_bp value=1&gt; &lt;input type=hidden name=rsv_idx value=1&gt; &lt;input type=hidden name=tn value=baidu&gt;&lt;span class=&quot;bg s_ipt_wr&quot;&gt;&lt;input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus&gt;&lt;/span&gt;&lt;span class=&quot;bg s_btn_wr&quot;&gt;&lt;input type=submit id=su value=百度一下 class=&quot;bg s_btn&quot;&gt;&lt;/span&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=u1&gt; &lt;a href=http://news.baidu.com name=tj_trnews class=mnav&gt;新闻&lt;/a&gt; &lt;a href=http://www.hao123.com name=tj_trhao123 class=mnav&gt;hao123&lt;/a&gt; &lt;a href=http://map.baidu.com name=tj_trmap class=mnav&gt;地图&lt;/a&gt; &lt;a href=http://v.baidu.com name=tj_trvideo class=mnav&gt;视频&lt;/a&gt; &lt;a href=http://tieba.baidu.com name=tj_trtieba class=mnav&gt;贴吧&lt;/a&gt; &lt;noscript&gt; &lt;a href=http://www.baidu.com/bdorz/login.gif?login&amp;amp;tpl=mn&amp;amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb&gt;登录&lt;/a&gt; &lt;/noscript&gt; &lt;script&gt;document.write(&apos;&lt;a href=&quot;http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=&apos;+ encodeURIComponent(window.location.href+ (window.location.search === &quot;&quot; ? &quot;?&quot; : &quot;&amp;&quot;)+ &quot;bdorz_come=1&quot;)+ &apos;&quot; name=&quot;tj_login&quot; class=&quot;lb&quot;&gt;登录&lt;/a&gt;&apos;);&lt;/script&gt; &lt;a href=//www.baidu.com/more/ name=tj_briicon class=bri style=&quot;display: block;&quot;&gt;更多产品&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=ftCon&gt; &lt;div id=ftConw&gt; &lt;p id=lh&gt; &lt;a href=http://home.baidu.com&gt;关于百度&lt;/a&gt; &lt;a href=http://ir.baidu.com&gt;About Baidu&lt;/a&gt; &lt;/p&gt; &lt;p id=cp&gt;&amp;copy;2016&amp;nbsp;Baidu&amp;nbsp;&lt;a href=http://www.baidu.com/duty/&gt;使用百度前必读&lt;/a&gt;&amp;nbsp; &lt;a href=http://jianyi.baidu.com/ class=cp-feedback&gt;意见反馈&lt;/a&gt;&amp;nbsp;京ICP证030173号&amp;nbsp; &lt;img src=//www.baidu.com/img/gs.gif&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</div><div class="line"></div><div class="line">----------Sanji.com--------bookName值=spring boot,当前类=ElConfig.outputResource()</div><div class="line">changuop</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch2/el" target="_blank" rel="external">代码示例（连接）</a></p>
</li>
</ul>
<h2 id="3-Bean的初始化和销毁"><a href="#3-Bean的初始化和销毁" class="headerlink" title="3.Bean的初始化和销毁"></a>3.Bean的初始化和销毁</h2><h3 id="3-1-点睛"><a href="#3-1-点睛" class="headerlink" title="3.1 点睛"></a>3.1 点睛</h3><blockquote>
<p>实际开发中会遇到在Bean使用之前或者之后做些必要的操作。Spring对Bean的生命周期的操作提供了支持。提供两种方式：</p>
<ol>
<li>Java配置方式：使用@Bean 的initMethod 和destroyMethod （相当于xml配置的init-method和destroy-method）。</li>
<li>注解方式：JSR-250 的@PostConstuct@PreDestroy。</li>
</ol>
</blockquote>
<h3 id="3-2-演示"><a href="#3-2-演示" class="headerlink" title="3.2 演示"></a>3.2 演示</h3><ol>
<li><p>增加JSR250支持pom.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.annotation/jsr250-api --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.annotation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsr250-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>使用@Bean形式的Bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.prepost;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@Bean</span>形式的Bean BeanWayService</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanWayService</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">		System.out.println(<span class="string">"@Bean-init-method"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BeanWayService</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		System.out.println(<span class="string">"初始化构造函数-BeanWayService"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;</div><div class="line">		System.out.println(<span class="string">"@Bean-destroy-method"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>JSR250形式的Bena</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.prepost;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</div><div class="line"><span class="keyword">import</span> javax.annotation.PreDestroy;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * JSR250形式的Bean</div><div class="line"> * JSR250WayService</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSR250WayService</span> </span>&#123;</div><div class="line">	<span class="meta">@PostConstruct</span><span class="comment">//在构造函数后执行</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">		System.out.println(<span class="string">"jsr250-init-method"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JSR250WayService</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		System.out.println(<span class="string">"初始化构造函数-JSR250WayService"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="meta">@PreDestroy</span><span class="comment">//在Bean销毁之前执行</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;</div><div class="line">		System.out.println(<span class="string">"jsr250-destroy-method"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.prepost;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 配置类</div><div class="line"> * PrePostConfig</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.chanroc.springboot.ch2.prepost"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrePostConfig</span> </span>&#123;</div><div class="line">	<span class="comment">//指定Bean在构造之后，在销毁前执行</span></div><div class="line">	<span class="meta">@Bean</span>(initMethod = <span class="string">"init"</span>, destroyMethod = <span class="string">"destroy"</span>)</div><div class="line">	<span class="function">BeanWayService <span class="title">beanWayService</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> BeanWayService();</div><div class="line">	&#125;</div><div class="line">	<span class="meta">@Bean</span></div><div class="line">	<span class="function">JSR250WayService <span class="title">jsr250WayService</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JSR250WayService();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>主方法运行：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.prepost;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 主方法</div><div class="line"> * Main</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(PrePostConfig.class);</div><div class="line">		BeanWayService beanWayService = context.getBean(BeanWayService.class);</div><div class="line">		JSR250WayService jsr250WayService = context.getBean(JSR250WayService.class);</div><div class="line">		context.close();</div><div class="line">		System.out.println(<span class="string">"销毁之后"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>运行结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">初始化构造函数-BeanWayService</div><div class="line">@Bean-init-method</div><div class="line">初始化构造函数-JSR250WayService</div><div class="line">jsr250-init-method</div><div class="line"></div><div class="line">jsr250-destroy-method</div><div class="line">@Bean-destroy-method</div><div class="line">销毁之后</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-Profile"><a href="#4-Profile" class="headerlink" title="4.Profile"></a>4.Profile</h2><h3 id="4-1点睛"><a href="#4-1点睛" class="headerlink" title="4.1点睛"></a>4.1点睛</h3><blockquote>
<p><code>Profile</code>为在不同环境下使用不同的配置提供了支持（开发环境的配置和生产环境的配置肯定是不同的）</p>
<ol>
<li>通过设定@Environment的ActiveProfile来设定当前contex需要的配置环境。在开发中使用@Profile注解或者方法，在不同情况下选择实例化不同的Bean。</li>
<li>通过设定jvm的spring.profile.active参数来设置配置环境。</li>
<li>Web项目设置在Servlet的context parameter中。</li>
</ol>
</blockquote>
<h3 id="4-2-演示"><a href="#4-2-演示" class="headerlink" title="4.2 演示"></a>4.2 演示</h3><ol>
<li><p>示例bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.profile;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 实例Bean</div><div class="line"> * DemoBean</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoBean</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> String content;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DemoBean</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		<span class="keyword">this</span>.content = content;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> content;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.content = content;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Profile配置</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.profile;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Profile;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Profile配置</div><div class="line"> * ProfileConfig</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProfileConfig</span> </span>&#123;</div><div class="line">	<span class="meta">@Bean</span></div><div class="line">	<span class="meta">@Profile</span>(<span class="string">"dev"</span>)<span class="comment">//dev时实例化devDemoBean</span></div><div class="line">	<span class="function"><span class="keyword">public</span> DemoBean <span class="title">devDemoBean</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DemoBean(<span class="string">"from development profile"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="meta">@Bean</span></div><div class="line">	<span class="meta">@Profile</span>(<span class="string">"prod"</span>)<span class="comment">//prod时实例化prodDemoBean</span></div><div class="line">	<span class="function"><span class="keyword">public</span> DemoBean <span class="title">prodDemoBean</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DemoBean(<span class="string">"from production profile"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.profile;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 运行类</div><div class="line"> * Main</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext();</div><div class="line">		context.getEnvironment().setActiveProfiles(<span class="string">"prod"</span>);</div><div class="line">		context.getEnvironment().setActiveProfiles(<span class="string">"dev"</span>);</div><div class="line">		context.register(ProfileConfig.class);</div><div class="line">		context.refresh();</div><div class="line">		DemoBean demoBean = context.getBean(DemoBean.class);</div><div class="line">		System.out.println(demoBean.getContent());</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">from development profile</div><div class="line"></div><div class="line">from development profile</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch2/profile" target="_blank" rel="external">代码示例（连接）</a></p>
</li>
</ol>
<h2 id="5-事件（ApplicationEvent）"><a href="#5-事件（ApplicationEvent）" class="headerlink" title="5.事件（ApplicationEvent）"></a>5.事件（ApplicationEvent）</h2><h3 id="5-1-点睛"><a href="#5-1-点睛" class="headerlink" title="5.1 点睛"></a>5.1 点睛</h3><blockquote>
<p>spring的事件（ApplicationEvent）为Bean与Bean之间的消息通信提供了支持。当一个Bean处理玩一个任务后，希望另一个Bean知道并能做相应处理，需要另一个Bean监听当前Bean的发生事件。</p>
<ul>
<li>Spring的事件需要遵循如下流程：<ul>
<li>自定义事件，集成ApplicationEvent。</li>
<li>自定义事件监听器 ，实现ApplicationListener。</li>
<li>使用容器发布事件。<h3 id="5-2-示例"><a href="#5-2-示例" class="headerlink" title="5.2 示例"></a>5.2 示例</h3></li>
</ul>
</li>
</ul>
<ol>
<li>自定义事件。<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.event;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEvent;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义事件</div><div class="line"> * ApplicationEvent</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span></span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line">	<span class="keyword">private</span> String msg;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * Create a new ApplicationEvent.</div><div class="line">	 *</div><div class="line">	 * <span class="doctag">@param</span> source the object on which the event initially occurred (never &#123;<span class="doctag">@code</span> null&#125;)</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DemoEvent</span><span class="params">(Object source, String msg)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>(source);</div><div class="line">		<span class="keyword">this</span>.msg = msg;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> msg;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.msg = msg;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<ol>
<li><p>事件监听器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.event;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 事件监听器</div><div class="line"> * DemoListener</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">DemoEvent</span>&gt; </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(DemoEvent event)</span> </span>&#123;<span class="comment">//对消息进行接受处理</span></div><div class="line">		String msg = event.getMsg();</div><div class="line">		System.out.println(<span class="string">"我（bean-demoListener）接收到了bean-demoPublisher发布的消息："</span>+msg);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>事件发布类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.event;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 事件发布类</div><div class="line"> * DemoPublisher</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoPublisher</span> </span>&#123;</div><div class="line">	<span class="meta">@Autowired</span></div><div class="line">	ApplicationContext applicationContext;<span class="comment">//用来发布事件</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">publisher</span><span class="params">(String msg)</span></span>&#123;</div><div class="line">		applicationContext.publishEvent(<span class="keyword">new</span> DemoEvent(<span class="keyword">this</span>,msg));<span class="comment">//发布事件</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.event;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 配置类</div><div class="line"> * EventConfig</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.chanroc.springboot.ch2.event"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EventConfig</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.chanroc.springboot.ch2.event;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Main</div><div class="line"> * 主方法</div><div class="line"> * <span class="doctag">@author</span> ChenGuop</div><div class="line"> * <span class="doctag">@date</span> 2016/11/5</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(EventConfig.class);</div><div class="line">		DemoPublisher demoPublisher = context.getBean(DemoPublisher.class);</div><div class="line">		demoPublisher.publisher(<span class="string">"hello application event"</span>);</div><div class="line">		context.close();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">我（bean-demoListener）接收到了bean-demoPublisher发布的消息：hello application event</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="5-3-代码演示（连接）"><a href="#5-3-代码演示（连接）" class="headerlink" title="5.3 代码演示（连接）"></a>5.3 <a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch2/event" target="_blank" rel="external">代码演示（连接）</a></h3>]]></content>
    
    <summary type="html">
    
      Spring Boot,Bean生命周期,Profile,事件监听,Spring El
    
    </summary>
    
      <category term="Java" scheme="http://blog.chanroc.top/categories/Java/"/>
    
      <category term="Spring" scheme="http://blog.chanroc.top/categories/Java/Spring/"/>
    
    
      <category term="Spring Boot" scheme="http://blog.chanroc.top/tags/Spring-Boot/"/>
    
      <category term="Bean生命周期" scheme="http://blog.chanroc.top/tags/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
      <category term="Profile" scheme="http://blog.chanroc.top/tags/Profile/"/>
    
      <category term="事件监听" scheme="http://blog.chanroc.top/tags/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"/>
    
      <category term="Spring El" scheme="http://blog.chanroc.top/tags/Spring-El/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot实战--（一）Spring项目的快速搭建</title>
    <link href="http://blog.chanroc.top/2016/11/03/springboot/ch1/"/>
    <id>http://blog.chanroc.top/2016/11/03/springboot/ch1/</id>
    <published>2016-11-03T06:57:00.000Z</published>
    <updated>2016-11-04T03:29:24.612Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring项目的快速搭建"><a href="#Spring项目的快速搭建" class="headerlink" title="Spring项目的快速搭建"></a>Spring项目的快速搭建</h1><h2 id="Maven-的简介"><a href="#Maven-的简介" class="headerlink" title="Maven 的简介"></a>Maven 的简介</h2><blockquote>
<p>Apache Maven 是一个软件项目管理工具。基于项目对象模型（Project Object Model，POM）的概念，Maven可以用来管理项目的依赖，编译，文档等信息。</p>
</blockquote>
<h2 id="Maven的安装"><a href="#Maven的安装" class="headerlink" title="Maven的安装"></a>Maven的安装</h2><p>略</p>
<h2 id="Maven-的pom-xml"><a href="#Maven-的pom-xml" class="headerlink" title="Maven 的pom.xml"></a>Maven 的pom.xml</h2><ul>
<li><p>dependencies</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- dependency</div><div class="line">	&gt; ``` &lt;dependency&gt;&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>内不通过groupId、artifactId、version确定唯一的依赖</p>
</blockquote>
</li>
<li><p>查询地址：<a href="http://mvnrepository.com/" target="_blank" rel="external">http://mvnrepository.com/</a></p>
<blockquote>
<p>可以查询对应jar包的 maven pom</p>
</blockquote>
</li>
<li><p>具体结构</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="comment">&lt;!-- 组织唯一标识--&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span><span class="comment">&lt;!-- 项目唯一标识--&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span><span class="comment">&lt;!--项目的版本--&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>定义变量</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>编译插件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Spring-项目的搭建"><a href="#Spring-项目的搭建" class="headerlink" title="Spring 项目的搭建"></a>Spring 项目的搭建</h2><blockquote>
<p>基于IntelliJ IDEA搭建</p>
<ul>
<li>新建Maven项目。单击File-new-Project-Maven<br><img src="http://source.chanroc.top/image/ch1.di/new-project.png" alt="enter image description here"></li>
<li>选择maven<br><img src="http://source.chanroc.top/image/ch1.di/new-peroject-maven.png" alt="enter image description here"></li>
<li>输入坐标值</li>
<li>选择存储路径<br><img src="http://source.chanroc.top/image/ch1.di/new-project-3.png" alt="enter image description here"><br><img src="http://source.chanroc.top/image/ch1.di/new-project-4.png" alt="enter image description here"></li>
<li>修改pom.xml文件</li>
</ul>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">		         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">		         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">		</div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.chanroc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		</div><div class="line">		    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></div><div class="line">		    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">		    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">		        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></div><div class="line">		        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">		            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">		            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">		            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">		</div><div class="line">		    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">		            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">		                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">		                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">		            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">		    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Spring基本配置"><a href="#Spring基本配置" class="headerlink" title="Spring基本配置"></a>Spring基本配置</h2><p>Spring框架四大原则：</p>
<ol>
<li>使用POJO经轻量级和最小入侵式开发。</li>
<li>通过依赖注入和基于接口编程实现松耦合。</li>
<li>AOP和默认习惯进行声明式编程</li>
<li>使用AOP合模班减少模式化代码</li>
</ol>
<h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><blockquote>
<ul>
<li>控制反转（IOC）和依赖注入在spring环境下是等同的概念，前者是通过后者实现的。</li>
<li>依赖注入：容器负责创建对象和维护对象间的依赖关系，而非对象本身。</li>
<li><code>目的</code>：解耦</li>
<li>Spring IOC容器 负责创建Bean，通过容器将功能Bean注入到需要的Bean中。方式：xml，注解，Java配置、groovy配置实现Bean的创建和注入</li>
<li>元数据：描述数据的数据。xml配置，注解，Java配置称为配置元数据。</li>
</ul>
</blockquote>
<ul>
<li>声明Bean的注解：<ul>
<li>@Component组件，无明确的角色</li>
<li>@Service 在业务逻辑层使用</li>
<li>@Repository 在数据访问层使用</li>
<li>@Controller 在展现层使用（MVC）</li>
</ul>
</li>
<li>注入Bean的注解：<ul>
<li>@Autowired：Spring提供注解</li>
<li>@Inject：JSR-330提供注解</li>
<li>@Resource ：JSR-250提供注解</li>
</ul>
</li>
</ul>
<h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a><a href="https://github.com/ChenGuop/springboot" target="_blank" rel="external">代码演示</a></h4><ul>
<li><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch1/di" target="_blank" rel="external">具体代码位置</a></li>
</ul>
<h3 id="Java-配置"><a href="#Java-配置" class="headerlink" title="Java 配置"></a>Java 配置</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><blockquote>
<p>java配置是Spring4.x推荐的配置方式，可以完全代替xml配置；也是Spring Boot推荐的配置方式。<br>Java配置通过@Configuration和@Bean来实现</p>
<ul>
<li>@Configuration 声明当前类是一个配置类</li>
<li>@Bean注解子啊方法上，声明当前方法的返回值为一个Bean。<br>配置的原则：全局配置使用Java配置（数据库，MVC配置），业务Bean使用注解配置(@Service，@Component，@Repository，@Controller)</li>
</ul>
</blockquote>
<h4 id="代码演示-1"><a href="#代码演示-1" class="headerlink" title="代码演示"></a><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch1/javaconfig" target="_blank" rel="external">代码演示</a></h4><h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><blockquote>
<ul>
<li>AOP: 面向切面编程，相对于OOP面向对象编程</li>
<li>目的：解耦。在oop中智能通过继承和实现接口，阻碍更多的行为添加到一组类上，AOP弥补了OOP的不足。</li>
</ul>
</blockquote>
<ul>
<li>Spring支持AspectJ的注解式切面编程：<ol>
<li>使用@Aspect声明是一个切面。</li>
<li>使用@After、@Before、@Around 定义建言（advice），可直接将拦截规则（切点）作为参数。</li>
<li>@After、@Before、@Around 参数的拦截规则为切点（PointCut），为了使切点复用使用@PointCut 专门定义。</li>
<li>其中符合条件的每一个被拦截处为连接点（JoinPoint）。</li>
</ol>
</li>
</ul>
<h4 id="代码演示-2"><a href="#代码演示-2" class="headerlink" title="代码演示"></a><a href="https://github.com/ChenGuop/springboot/tree/master/src/main/java/com/chanroc/springboot/ch1/aop" target="_blank" rel="external">代码演示</a></h4><ul>
<li>示例将基于注解拦截和基本方法规则拦截两种方式。模拟记录操作日志系统的实现。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      使用maven的pom快速搭建项目
    
    </summary>
    
      <category term="Java" scheme="http://blog.chanroc.top/categories/Java/"/>
    
      <category term="Spring" scheme="http://blog.chanroc.top/categories/Java/Spring/"/>
    
    
      <category term="spring" scheme="http://blog.chanroc.top/tags/spring/"/>
    
      <category term="maven" scheme="http://blog.chanroc.top/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>项目中遇到的技术问题</title>
    <link href="http://blog.chanroc.top/2016/10/10/2016-10-10-01/"/>
    <id>http://blog.chanroc.top/2016/10/10/2016-10-10-01/</id>
    <published>2016-10-10T09:58:27.000Z</published>
    <updated>2016-11-03T02:42:03.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="json序列化问题-2016-10-10"><a href="#json序列化问题-2016-10-10" class="headerlink" title="json序列化问题 (2016.10.10)"></a>json序列化问题 (2016.10.10)</h2><blockquote>
<p>entity 实体<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@OneToOne</span></div><div class="line">	<span class="meta">@JoinColumn</span>(name = <span class="string">"USER_ID"</span>, updatable = <span class="keyword">false</span>, insertable = <span class="keyword">false</span>)</div><div class="line">	<span class="keyword">private</span> PlanUserVo userVo;</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>question：<code>Could not write content: No serializer found for class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )</code></p>
</li>
<li><p>answer:</p>
</li>
<li>1、@JsonIgnoreProperties({“hibernateLazyInitializer”, “handler”})</li>
<li>2、在配置文件中加 <code>spring.jackson.serialization.fail-on-empty-beans=false</code>ls</li>
<li>3、修改关联方式为fetch. EAGER(good solution I mean not just change fetch type to EAGER)</li>
</ul>
<h2 id="NamedEntityGraph-使用（2016-10-20）"><a href="#NamedEntityGraph-使用（2016-10-20）" class="headerlink" title="@NamedEntityGraph 使用（2016.10.20）"></a>@NamedEntityGraph 使用（2016.10.20）</h2><p>问题：当三个attributeNodes出现时候，出现异常，<code>cannot simultaneously fetch multiple bags</code>意思就是不能同时获取多个包</p>
<p>解决方法<br>将这个List改为Set接收数据就OK了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@OrderBy</span>(value = <span class="string">"id ASC "</span>)</div><div class="line">	<span class="meta">@OneToMany</span>(cascade = CascadeType.ALL, orphanRemoval = <span class="keyword">true</span>)</div><div class="line">	<span class="meta">@JoinTable</span>(name = <span class="string">"SYS_AWARD_SET_RULE"</span>,</div><div class="line">					joinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"SYS_AWARD_ID"</span>),</div><div class="line">					inverseJoinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"RULE_ID"</span>))</div><div class="line">	<span class="keyword">private</span> Set&lt;RewardPunishRule&gt; rewardPunishRules;<span class="comment">//奖罚规则</span></div><div class="line"></div><div class="line">	<span class="meta">@OneToMany</span>(cascade = CascadeType.ALL, orphanRemoval = <span class="keyword">true</span>)</div><div class="line">	<span class="meta">@JoinTable</span>(name = <span class="string">"SYS_AWARD_SET_GROUP"</span>,</div><div class="line">					joinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"SYS_AWARD_ID"</span>),</div><div class="line">					inverseJoinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"GROUPING_ID"</span>))</div><div class="line">	<span class="keyword">private</span> Set&lt;GroupNumber&gt; groupNumbers; <span class="comment">//人员分组设置</span></div></pre></td></tr></table></figure></p>
<p>alias cnpm=”npm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> \<br>–cache=$HOME/.npm/.cache/cnpm \<br>–disturl=<a href="https://npm.taobao.org/dist" target="_blank" rel="external">https://npm.taobao.org/dist</a> \<br>–userconfig=$HOME/.cnpmrc”</p>
]]></content>
    
    <summary type="html">
    
      项目中遇到的技术问题
    
    </summary>
    
      <category term="Question" scheme="http://blog.chanroc.top/categories/Question/"/>
    
    
      <category term="持续更新" scheme="http://blog.chanroc.top/tags/%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>拍卖会的故事</title>
    <link href="http://blog.chanroc.top/2016/08/06/2016-08-06-01/"/>
    <id>http://blog.chanroc.top/2016/08/06/2016-08-06-01/</id>
    <published>2016-08-06T05:45:00.000Z</published>
    <updated>2016-11-03T02:40:24.363Z</updated>
    
    <content type="html"><![CDATA[<h1 id="拍卖会的故事"><a href="#拍卖会的故事" class="headerlink" title="拍卖会的故事"></a>拍卖会的故事</h1><p><strong>【战神】快银皮特罗（田小强）(707643987) 2016/8/6 9:57:14</strong></p>
<blockquote>
<p>下面要拍卖的是一位道友在上古遗存下来的仙殿中寻到的一盒炫迈……”,大厅中顿时一片嘈杂拍卖行的老者摆了摆手示意让大家静一静道“炫迈的神奇功效想必诸位都知道吧,如果棋逢敌手,就要看谁更持久,这时候吃上一小片炫迈,估计敌手会立马绝望的打滚认输,这等神物也不是一般晶石能衡量的谁若有同等价格的宝物也能用来交换”“现在拍卖开始!底价一万极品仙晶”“我出三万极品仙晶!”“我出十万极品仙晶!”“我出一罐正宗加多宝!”……………………众人一阵沉默,加多宝,那可是价值百万极品仙晶啊!“我出一包辣条!”正当众人无力叹息时,拍卖厅二楼传来霸道的一道声音!什么!!!众人闻言皆露出不可思议的神色,辣条是什么？那可是天地未开混沌中孕育而成的绝世神物,一些传承万载的无上道统也未必能拿出一条,更徨论是一包,所有人都望向声音所发之处只见那里端坐着一个男子二十出头的样子,令人震惊的是他所穿的道袍上的标志.“竟然是神秘而又强大的蓝翔学院!而且还是当中最可怕的挖掘机系!”蓝翔学院,人们听到这名字第一时间联想到就是强大!据传当年一个大教惹了一个蓝翔挖掘机系的学生,然后被那人祭出挖掘机一路碾压而过,山门破碎,护山大阵如同水豆腐一般</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336) 2016/8/6 10:43:02</strong></p>
<blockquote>
<p>然后被那人祭出挖掘机一路碾压而过，山门破碎，护山大阵如同水豆腐般不堪一击，整教所有人皆被镇杀！要知道当中还有渡劫期的人物！蓝翔挖掘机有多可怕可想而知！难怪此子能够拿出一包辣条，竟是出自蓝翔学院！“两包”？只听二楼另一个包间传来一声淡淡轻呼？“什么？竟然有人敢和蓝翔学院叫板，而且还能拿出两包辣条！这是何等人物”大家议论纷纷？只见一个20出头的年轻人，身上的白衣无风自动，胸口一个耀眼的徽章——新东方！</p>
</blockquote>
<p><strong>【匿名】谢霆锋 2016/8/6 10:07:24</strong></p>
<blockquote>
<p>牛逼</p>
</blockquote>
<p><strong>【匿名】谢霆锋 2016/8/6 10:07:34</strong></p>
<blockquote>
<p>666666</p>
</blockquote>
<p><strong>【匿名】林正英 2016/8/6 10:41:13</strong></p>
<blockquote>
<p>/zan</p>
</blockquote>
<p><strong>【匿名】林正英 2016/8/6 10:41:32</strong></p>
<blockquote>
<p>还能往下接吗 求人才</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336) 2016/8/6 10:43:02</strong></p>
<blockquote>
<p>然后被那人祭出挖掘机一路碾压而过，山门破碎，护山大阵如同水豆腐般不堪一击，整教所有人皆被镇杀！要知道当中还有渡劫期的人物！蓝翔挖掘机有多可怕可想而知！难怪此子能够拿出一包辣条，竟是出自蓝翔学院！“两包”？只听二楼另一个包间传来一声淡淡轻呼？“什么？竟然有人敢和蓝翔学院叫板，而且还能拿出两包辣条！这是何等人物”大家议论纷纷？只见一个20出头的年轻人，身上的白衣无风自动，胸口一个耀眼的徽章——新东方！</p>
</blockquote>
<p><strong>【匿名】赵雅芝  10:44:27</strong></p>
<blockquote>
<p>求看续集</p>
</blockquote>
<p><strong>【匿名】刘德华  10:44:59</strong></p>
<blockquote>
<p>坐等更新</p>
</blockquote>
<p><strong>【匿名】卓依婷  10:45:03</strong><br><img src="https://raw.githubusercontent.com/ChenGuop/JPA2.0_learn/master/img/4_FQS3__EZCH4V%28%7B4W82UAG.jpg" alt="enter image description here"><br><strong>【匿名】张智霖  10:45:28</strong><br><img src="https://raw.githubusercontent.com/ChenGuop/JPA2.0_learn/master/img/~FNW%5BEDN7N4X$7%7BAKZL%7DE93.jpg" alt="enter image description here"></p>
<p><strong>【匿名】张智霖  10:45:28</strong></p>
<blockquote>
<p>“难怪他能拿出两包辣条，原来是新东方学院，虽然新东方学院不如蓝翔学院战斗力强，但论辣条的存量，十个蓝翔也不一定比得过新东方，毕竟新东方的学生差不多个个都是制作辣条的高手” 一个是力量为尊的蓝翔，一个是财大气粗的新东方，为了争夺一个茶叶蛋，众人感觉一股新的风暴就要出现了…… </p>
</blockquote>
<p><strong>【匿名】林正英  10:46:11</strong></p>
<blockquote>
<p>不是说好的炫迈吗</p>
</blockquote>
<p><strong>【匿名】周润发  10:46:53</strong></p>
<blockquote>
<p>好厉害 接着说啊</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336)  10:47:00</strong></p>
<blockquote>
<p>一个是力量为尊的蓝翔，一个是财大气粗的新东方，为了争夺一盒炫迈，众人感觉一股新的风暴就要出现了……　　</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336)  10:48:11</strong></p>
<blockquote>
<p>就在人们以为宝物是新东方这名高手的时候，忽然从楼上贵宾包厢传出一声柔美空灵的声音：“我出一颗茶叶蛋”，话一落音，拍卖场瞬间沸腾，“茶叶蛋啊！！！传说能生白肉，续白骨，调阴阳的茶叶蛋，这种以西天杯茶、东海南叶、再配带有雄凤血脉蛋，只要身上有此蛋，想死都难”！楼下新东方高手断喝，“哪位朋友敢和我新东方抢东西，不想活了啊”，震得众人心神俱动。</p>
</blockquote>
<p><strong>【匿名】周润发  10:49:07</strong></p>
<blockquote>
<p>下个神物 会不会是大蒜</p>
</blockquote>
<p><strong>【匿名】赵雅芝  10:49:18</strong></p>
<blockquote>
<p>不是  是切糕</p>
</blockquote>
<p><strong>【匿名】周润发  10:49:34</strong></p>
<blockquote>
<p>辣根</p>
</blockquote>
<p><strong>【匿名】庾澄庆  10:49:44</strong></p>
<blockquote>
<p>每一个抖腿的人</p>
</blockquote>
<p><strong>【匿名】庾澄庆  10:49:59</strong></p>
<blockquote>
<p>心中都有一个缝纫机的梦想</p>
</blockquote>
<p><strong>【英雄】斯凯(250668550)  10:51:47</strong></p>
<blockquote>
<p>可以的</p>
</blockquote>
<p><strong>【匿名】赵雅芝  10:53:49</strong></p>
<blockquote>
<p>更新啊</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336)  10:54:06</strong></p>
<blockquote>
<p>楼下新东方高手断喝，哪位朋友刚和我新东方抢东西，不想活了啊，震得众人心神俱动。而楼上轻飘飘的说，本姑娘来自三际，你想怎样………….楼下瞬间静！！！！”三际！！！！“，楼下男子发出难以置信的低沉叫声，咬着牙，又问道：”可是和祖师爷那个时代齐名的修仙圣地三际？，传闻上古时期，成仙成圣之人众多，就算如今，也不是我们新东方可以抗衡的“话音刚落，拍卖场瞬间沸腾了起来。”天哪，三际？他们可从来都是保持神秘的，今天怎么突然出现了“”估计是有什么大的行动吧“”这片大陆又将不平静了，哎，老夫老矣，这天下归年轻人了“楼下男子，神情失落，”本以为能借此够突破无上境界，没想到竟遇到三际人士，不行！，这一定是我的，叫我师哥过来，一起收了她“旁边人唯唯诺诺的离开了。就在众人以为事情已定时，突然一个角落传来微微查查的声音：”你们这么把东西做决定是不是太早了，哈哈，贫道也来出一瓶老干妈“”哪方高人，请速速现身“下方男子惊异道。”</p>
</blockquote>
<p>【战神】钢铁侠斯塔克(2240369336)  10:56:31</p>
<blockquote>
<p>请速速现身“下方男子惊异道。”什么！这可是传说中也难得一见的老干妈？一出手居然还是一整瓶。“不过更多的人却很迷茫，似乎没听说过这件物品。这时，拍卖师解释了开来：“相比大家都没听说过这件物品，不过在老夫年幼时曾意外从祖父哪里得来一张残页，上面依稀记载了数万年前，风靡一时，高官显要都不能享用的绝世宝物-老干妈，每一口，每一次，都能享受到时间难得的鲜美，是开天以来，绝世神人用混沌物质所凝聚的一种神级宝物，堪比神迹般稀有，是于封神榜，万年莲子心同等级的存在。”嘶嘶嘶“场下传来一片倒吸凉气的声音。‘’这样就够了么？‘’这时大厅角落突然传出一声突兀的声音。说话的是一位少年，一位毫不起眼的少年，从他进入大厅就没说过一句话。‘’少侠莫非还有比这更逆天的宝贝？‘’拍卖行老者眼睛一咪。‘’你们看这是什么？‘’少年缓缓说到，随即从怀里摸出一物。这是拳头大一小块物品，似金非金，似木非木，发出阵阵异香，大厅里所有人闻见此香味之人，仿佛徘徊自己几百年的瓶颈似有松动，有的人甚至立即找地方闭关突破。‘’嘶……这莫非就是那传说中的切糕。‘’<br><strong>【匿名】谢霆锋  10:57:41</strong><br>120</p>
</blockquote>
<hr>
<p><strong>钢铁侠斯塔克撤回了一条消息</strong></p>
<p><strong>【匿名】钟汉良  11:04:58</strong></p>
<blockquote>
<p>、、、、、</p>
</blockquote>
<p><strong>【战神】钢铁侠斯塔克(2240369336)  11:06:54</strong></p>
<blockquote>
<p>“嘶……这莫非就是那传说中的切糕。”大厅里极个别老怪物以认出此物。此物传说极为逆天，随身携带指甲盖大小一块此物，不但练功效果倍增，尤其厉害的是无论遇到任何练功瓶颈，只需一小块便轻松度过，且毫无负作用。这时以有人认出此少年。“那少年莫非就是撸而哈吃的依钵传人撸而猛吃？”哦……卖糕的……大厅里发出一阵阵惊呼。“一杯香飘飘！”一只玉手抬起。众人皆震惊了。香飘飘，那可是在一段时间风靡三界，据说可绕地球两圈，是飞仙必备神器，但后来因为灵上道人和魔无道人为了飞仙，香飘飘被二人抢走，全界寥寥无几。这到底是何方神圣，竟能拿出一杯！众人望去。那是一个女子，袖口一抹红色。“财务部！！”众人用崇拜的眼神望向那女子。财务部，那可是财富最多的地方。用一杯香飘飘来换炫迈，真是财大气粗。“我想起来了。当年财务部被魔无道人看上，赠上了十杯香飘飘。”一人尖叫起来。“什么？！”众人皆倒吸一口凉气。</p>
</blockquote>
<p>此故事纯属虚构，如有雷同纯属巧合。<br>发生在一个无聊的办公司里面的故事。qq群记载,雷神thor整理[2016-08-06]。</p>
]]></content>
    
    <summary type="html">
    
      拍卖会的故事
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.chanroc.top/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="办公室" scheme="http://blog.chanroc.top/tags/%E5%8A%9E%E5%85%AC%E5%AE%A4/"/>
    
      <category term="神话" scheme="http://blog.chanroc.top/tags/%E7%A5%9E%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>关于Spring MVC POST请求 @RequestBody</title>
    <link href="http://blog.chanroc.top/2016/02/28/2016-02-28-01/"/>
    <id>http://blog.chanroc.top/2016/02/28/2016-02-28-01/</id>
    <published>2016-02-28T09:58:27.000Z</published>
    <updated>2016-11-03T02:37:18.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于Spring-MVC-POST请求-RequestBody"><a href="#关于Spring-MVC-POST请求-RequestBody" class="headerlink" title="关于Spring MVC POST请求 @RequestBody"></a>关于Spring MVC POST请求 @RequestBody</h2><p>在使用Spring MVC 时Ajax发送post请求：<br>本来是要接受一个实体类，但是数据结构比较复杂；自己搞了快一天才弄明白<br><strong>重点：</strong> 在js中json格式要转换成字符串的json格式接受才行 <code>jsonStr = JSON.stringify(jsonStr);</code></p>
<blockquote>
<p>实体类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Id</span></div><div class="line"><span class="meta">@GenericGenerator</span>(name = <span class="string">"idgen"</span>, strategy = <span class="string">"increment"</span>)</div><div class="line"><span class="meta">@GeneratedValue</span>(generator = <span class="string">"idgen"</span>)</div><div class="line"><span class="keyword">private</span> Long achieveId; <span class="comment">// 主键</span></div><div class="line"><span class="meta">@OneToOne</span></div><div class="line"><span class="meta">@JoinColumn</span>(name = <span class="string">"MACHINE_TYPE"</span>, updatable = <span class="keyword">false</span>, insertable = <span class="keyword">false</span>)</div><div class="line"><span class="keyword">private</span> MachineType machineType; <span class="comment">// 机型类别</span></div><div class="line"><span class="meta">@Column</span>(name = <span class="string">"MACHINE_TYPE"</span>)</div><div class="line"><span class="keyword">private</span> String machineTypeId; <span class="comment">// 机型类别</span></div><div class="line"><span class="meta">@OneToOne</span></div><div class="line"><span class="meta">@JoinColumn</span>(name = <span class="string">"BRAND_ID"</span>, updatable = <span class="keyword">false</span>, insertable = <span class="keyword">false</span>)</div><div class="line"><span class="keyword">private</span> Brand brand; <span class="comment">// 品牌ID</span></div><div class="line"><span class="meta">@Column</span>(name = <span class="string">"BRAND_ID"</span>)</div><div class="line"><span class="keyword">private</span> String brandId; <span class="comment">// 品牌ID</span></div><div class="line"><span class="meta">@OneToOne</span></div><div class="line"><span class="meta">@JoinColumn</span>(name = <span class="string">"GOOD_ID"</span>, updatable = <span class="keyword">false</span>, insertable = <span class="keyword">false</span>)</div><div class="line"><span class="keyword">private</span> Goods good; <span class="comment">// 型号ID</span></div><div class="line"><span class="meta">@Column</span>(name = <span class="string">"GOOD_ID"</span>)</div><div class="line"><span class="keyword">private</span> String goodId; <span class="comment">// 型号ID</span></div><div class="line"><span class="keyword">private</span> Integer numberFirst; <span class="comment">// 任务量一</span></div><div class="line"><span class="keyword">private</span> Integer numberSecond; <span class="comment">// 任务量2</span></div><div class="line"><span class="keyword">private</span> Integer numberThird; <span class="comment">// 任务量3</span></div><div class="line"><span class="keyword">private</span> Date startDate; <span class="comment">// 开始日期</span></div><div class="line"><span class="keyword">private</span> Date endDate; <span class="comment">// 结束日期</span></div><div class="line"><span class="keyword">private</span> Date issuingDate; <span class="comment">// 提成发放日期</span></div><div class="line"><span class="keyword">private</span> String auditor; <span class="comment">// 审核人</span></div><div class="line"><span class="keyword">private</span> String remark; <span class="comment">// 备注</span></div><div class="line"><span class="keyword">private</span> Date createDate; <span class="comment">// 创建日期</span></div><div class="line"><span class="meta">@Enumerated</span>(EnumType.STRING)</div><div class="line"><span class="keyword">private</span> FlagEnum flag = FlagEnum.NORMAL; <span class="comment">// 是否删除：normal-正常，del-删除</span></div><div class="line"><span class="meta">@Enumerated</span>(EnumType.STRING)</div><div class="line"><span class="keyword">private</span> AchieveStatusEnum status = AchieveStatusEnum.WAIT; <span class="comment">// 审核状态：BACK-驳回，WAIT-待审核，OVER-已审核</span></div><div class="line"><span class="keyword">private</span> String planId;</div><div class="line"></div><div class="line"><span class="meta">@OneToMany</span>(cascade=CascadeType.ALL)</div><div class="line"><span class="meta">@JoinTable</span>(name=<span class="string">"SYS_ACHIEVE_SET_RULE"</span>,</div><div class="line">   joinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"SYS_ACHIEVE_ID"</span>),</div><div class="line">   inverseJoinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"RULE_ID"</span>))</div><div class="line"><span class="keyword">private</span> List&lt;RewardPunishRule&gt; rewardPunishRules;<span class="comment">//奖罚规则</span></div><div class="line"></div><div class="line"><span class="meta">@OneToMany</span>(cascade=CascadeType.ALL)</div><div class="line"><span class="meta">@JoinTable</span>(name=<span class="string">"SYS_ACHIEVE_SET_GROUP"</span>,</div><div class="line">    joinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"SYS_ACHIEVE_ID"</span>),</div><div class="line">    inverseJoinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"GROUPING_ID"</span>))</div><div class="line"><span class="keyword">private</span> List&lt;GroupNumber&gt; groupNumbers; <span class="comment">//人员分组设置</span></div></pre></td></tr></table></figure></p>
<p>controller<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">""</span>, method = RequestMethod.POST)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addAchieve</span><span class="params">(@RequestBody Achieve achieve)</span> </span>&#123;</div><div class="line">  String result = <span class="string">""</span>;</div><div class="line">  System.out.println(achieve);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>js-Ajax</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">toSubmit</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="comment">//	var jsonStr = $("#achieveForm").serialize();</span></div><div class="line"><span class="comment">//拼凑数据格式</span></div><div class="line">	<span class="keyword">var</span> jsonStr = &#123;</div><div class="line">		<span class="string">'planId'</span>: $(<span class="string">"#achieveForm input[name='planId']"</span>).val(),</div><div class="line">		<span class="string">'machineTypeId'</span> : $(<span class="string">"#achieveForm input[name='machineType']"</span>).val(),</div><div class="line">		<span class="string">'brandId'</span> : $(<span class="string">"#achieveForm .J_brand"</span>).val(),</div><div class="line">		<span class="string">'goodId'</span> : $(<span class="string">"#goodList"</span>).val()</div><div class="line">	&#125;;</div><div class="line"><span class="comment">//============需要转换成字符串的json格式传递参数==============================</span></div><div class="line">	jsonStr = <span class="built_in">JSON</span>.stringify(jsonStr);</div><div class="line"><span class="comment">//=================================</span></div><div class="line"><span class="comment">//	console.log("jsonStr:\r\n" + JSON.stringify(jsonStr));</span></div><div class="line">	<span class="comment">// alert(jsonStr);</span></div><div class="line">	$.ajax(&#123;</div><div class="line">		<span class="attr">url</span> : <span class="string">"/achieve"</span>,</div><div class="line">		<span class="attr">type</span> : <span class="string">"POST"</span>,</div><div class="line">		<span class="attr">contentType</span> : <span class="string">'application/json;charset=utf-8'</span>, <span class="comment">// 设置请求头信息</span></div><div class="line">		dataType : <span class="string">"json"</span>,</div><div class="line">		<span class="attr">data</span> : jsonStr,</div><div class="line">		<span class="attr">success</span> : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">			alert(data);</div><div class="line">		&#125;,</div><div class="line">		<span class="attr">error</span> : <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">			alert(res.responseText);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h2><blockquote>
<p>js 缺少一下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//============需要转换成字符串的json格式传递参数==============================</span></div><div class="line">	jsonStr = <span class="built_in">JSON</span>.stringify(jsonStr);</div><div class="line"><span class="comment">//=================================</span></div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>使用map接受数据</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">""</span>, method = RequestMethod.POST)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addAchieve</span><span class="params">(@RequestBody Map&lt;String, Object&gt; achieve)</span> </span>&#123;</div><div class="line">  String result = <span class="string">""</span>;</div><div class="line">  System.out.println(achieve);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用JSONObject接受数据</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">""</span>, method = RequestMethod.POST)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addAchieve</span><span class="params">(@RequestBody JSONObject achieve)</span> </span>&#123;</div><div class="line">  String result = <span class="string">""</span>;</div><div class="line">  System.out.println(achieve);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>异常信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[http-nio-8080-exec-9] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read document: Unrecognized token &apos;planId&apos;: was expecting (&apos;true&apos;, &apos;false&apos; or &apos;null&apos;)</div></pre></td></tr></table></figure>
</li>
<li><p>从chrome 的Postman 发送是可以的我就觉得我的数据格式有问题</p>
</li>
</ul>
<p>决绝办法是就是使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jsonStr = <span class="built_in">JSON</span>.stringify(jsonStr);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      关于Spring MVC POST请求 @RequestBody
    
    </summary>
    
      <category term="Java" scheme="http://blog.chanroc.top/categories/Java/"/>
    
      <category term="JavaScript" scheme="http://blog.chanroc.top/categories/Java/JavaScript/"/>
    
    
      <category term="Spring MVC" scheme="http://blog.chanroc.top/tags/Spring-MVC/"/>
    
      <category term="POST请求" scheme="http://blog.chanroc.top/tags/POST%E8%AF%B7%E6%B1%82/"/>
    
      <category term="AJAX" scheme="http://blog.chanroc.top/tags/AJAX/"/>
    
  </entry>
  
</feed>
